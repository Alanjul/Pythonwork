"""Card data class with class attributes,
data attributes, autogenerated method and explicitly defined method"""
from dataclasses import dataclass
from typing import List, ClassVar
@dataclass(order=True) # generate operators like >=, <=
class Card:
   FACE: ClassVar[List[str]] = ['Aces', 'Jack', 'Queen', 'King', '2','3',
                                '4', '5', '6', '7', '8', '9', '10']
   SUIT: ClassVar[List[str]] = ['Spades', 'Hearts', 'Diamonds', 'Clubs']
   faces: str
   suit: str
   @property
   def image(self) -> str:
       """Return image of card"""
       return str(self).replace(' ', '-') + ".png"
   def __str__(self) -> str:
       """Return string representation of card"""
       return f"{self.faces} of {self.suit}"
   def __format__(self, format ) -> str:
       """Return formated string representation of card"""
       return f"{str(self):{format}}"
